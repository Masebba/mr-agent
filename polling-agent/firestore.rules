rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ── USERS COLLECTION ──
    match /users/{userId} {
      // A user can read their own /users doc, or Admin/SuperAdmin can read any.
      allow read: if request.auth != null &&
                   (request.auth.uid == userId
                    || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"
                    || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "superadmin");
      // No client writes; only Cloud Functions write here.
      allow write: if false;
    }

    // ── CANDIDATES COLLECTION ──
    match /candidates/{candId} {
      // Any signed‐in user can read the list of candidates.
      allow read: if request.auth != null;

      // Only Admin/SuperAdmin can create/update/delete candidates.
      allow create, update, delete: if request.auth != null &&
         (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin"
          || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "superadmin");
    }

    // ── VOTES COLLECTION ──
    match /votes/{voteId} {
      let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;

      // Agents can create and read votes.
      allow create: if request.auth != null && userRole == "agent";
      allow read: if request.auth != null && (userRole == "agent" || userRole == "admin" || userRole == "superadmin");

      // Admin/Superadmin can also update or delete vote records if needed.
      allow update, delete: if request.auth != null && (userRole == "admin" || userRole == "superadmin");
    }

    // ── INCIDENTS COLLECTION ──
    match /incidents/{incId} {
      let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;

      // Agents can create new incidents.
      allow create: if request.auth != null && userRole == "agent";

      // Any signed‐in user (Agent, Admin, or Superadmin) can read incidents.
      allow read: if request.auth != null;

      // Only Admin/Superadmin can update (e.g., mark resolved).
      allow update: if request.auth != null && (userRole == "admin" || userRole == "superadmin");

      // No client‐side deletes.
      allow delete: if false;
    }

    // ── LOCK EVERYTHING ELSE ──
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
